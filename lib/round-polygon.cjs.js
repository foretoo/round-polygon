"use strict";const o=(e,n)=>Math.sqrt(Math.pow(n.x-e.x,2)+Math.pow(n.y-e.y,2)),x=(e,n,l)=>{if(l){const a=o(e,n),s=o(n,l),i=o(l,e);return Math.acos((a*a+s*s-i*i)/(2*a*s))}else return Math.atan2(n.y-e.y,n.x-e.x)},M=Math.PI,c=M*2,L=(e,n)=>{const l=n-e;return l>M&&l<c||l<0&&l>-M?-1:1},b=(e,n,l)=>{const a=x(e,n,l),s=x(n,e),i=x(n,l),t=1/Math.tan(a/2),g=L(s,i),h=s+g*a/2;return{main:a,next:i,prev:s,vel:t,dir:g,bis:h}},R=(e,n=0)=>{const l=e.map((t,g)=>{const h=e[(g-1+e.length)%e.length],y=e[(g+1)%e.length],d=o(t,y),f=o(h,t),m=b(h,t,y),P=t.r!==void 0?Math.min(d/m.vel,f/m.vel,t.r):0;return{...t,angle:m,offset:0,arc:{radius:n,hit:n,lim:P},in:{length:f,rest:f},out:{length:d,rest:d},locked:!1,id:g,get prev(){return l[(g-1+e.length)%e.length]},get next(){return l[(g+1)%e.length]}}});l.forEach(t=>{t.arc.hit=Math.min(t.out.length/(t.angle.vel+t.next.angle.vel),t.in.length/(t.angle.vel+t.prev.angle.vel))});const a=l.filter(t=>t.arc.lim>0);if(a.length){let t=v(a);for(;t;)w(t),t=v(a)}if(l.filter(t=>t.arc.lim===0).length&&n>0){let t=v(l);for(;t;)H(t,n),t=v(l)}const i=l.map(t=>{const g=t.arc.radius/Math.sin(t.angle.main/2);return{id:t.id,x:t.x,y:t.y,angle:{main:t.angle.main,prev:t.angle.prev,next:t.angle.next,bis:t.angle.bis,dir:t.angle.dir},offset:t.offset,arc:{radius:t.arc.radius,x:t.x+Math.cos(t.angle.bis)*g,y:t.y+Math.sin(t.angle.bis)*g},in:{length:t.in.length,x:t.x+Math.cos(t.angle.prev)*t.offset,y:t.y+Math.sin(t.angle.prev)*t.offset},out:{length:t.out.length,x:t.x+Math.cos(t.angle.next)*t.offset,y:t.y+Math.sin(t.angle.next)*t.offset},get prev(){return i[(t.id-1+e.length)%e.length]},get next(){return i[(t.id+1)%e.length]}}});return i},w=e=>{const{prev:n,next:l}=e;n.locked&&!l.locked?e.arc.radius=Math.min(Math.max((e.out.length-l.arc.lim*l.angle.vel)/e.angle.vel,e.out.length/(e.angle.vel+l.angle.vel)),e.in.rest/e.angle.vel,e.arc.lim):l.locked&&!n.locked?e.arc.radius=Math.min(Math.max((e.in.length-n.arc.lim*n.angle.vel)/e.angle.vel,e.in.length/(e.angle.vel+n.angle.vel)),e.out.rest/e.angle.vel,e.arc.lim):l.locked&&n.locked?e.arc.radius=Math.min(e.in.rest/e.angle.vel,e.out.rest/e.angle.vel,e.arc.lim):e.arc.radius=Math.min(Math.max((e.in.length-n.arc.lim*n.angle.vel)/e.angle.vel,e.in.length/(e.angle.vel+n.angle.vel)),Math.max((e.out.length-l.arc.lim*l.angle.vel)/e.angle.vel,e.out.length/(e.angle.vel+l.angle.vel)),e.arc.lim),k(e)},H=(e,n)=>{if(n>e.arc.hit){const{prev:l,next:a}=e;l.locked&&!a.locked?e.arc.radius=Math.max(Math.min(e.in.rest/e.angle.vel,e.out.length/(e.angle.vel+a.angle.vel),e.arc.radius),0):a.locked&&!l.locked?e.arc.radius=Math.max(Math.min(e.out.rest/e.angle.vel,e.in.length/(e.angle.vel+l.angle.vel),e.arc.radius),0):a.locked&&l.locked?e.arc.radius=Math.max(Math.min(e.in.rest/e.angle.vel,e.out.rest/e.angle.vel,e.arc.radius),0):e.arc.radius=e.arc.hit,k(e)}else k(e)},k=e=>{const{prev:n,next:l}=e;e.offset=e.arc.radius*e.angle.vel,n.out.rest-=e.offset,e.in.rest-=e.offset,e.out.rest-=e.offset,l.in.rest-=e.offset,e.locked=!0,n.arc.hit=Math.min(n.in.length/(n.angle.vel+n.prev.angle.vel),n.in.rest/n.angle.vel,n.out.rest/n.angle.vel),l.arc.hit=Math.min(l.out.length/(l.angle.vel+l.next.angle.vel),l.out.rest/l.angle.vel,l.in.rest/l.angle.vel)},v=e=>e.reduce((n,l)=>l.locked?n:n?l.arc.hit<n.arc.hit?l:n:l,null);module.exports=R;
